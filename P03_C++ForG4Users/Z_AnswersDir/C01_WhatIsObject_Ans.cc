//******************************************************************************
// Introduction to C++ for Geant4 Users: オブジェクトとは何か/アクセスとメンバー関数
//******************************************************************************

//------------------------------------------------------------------------------
// [演習 1]  built-inタイプ(int, double, char, 等）のオブジェクトの作成方法の習得
//   (演習実行手順)
//     下のプログラムのコメント部分に書かれた[問]に対して、答えを入力してプログラムを完成せよ
///------------------------------------------------------------------------------

#include <iostream>
#include <string>
#include <vector>
#include <complex>
using namespace std;

int main() {

// intタイプの変数を作り初期化する - 多くのプログラム言語で共通のスタイルを使う
  int eVal = 5;                      // intオブジェクトの作成
  int mVal = 7;                      // [問] 上と同じタイプの変数を作り初期化せよ

// intタイプのオブジェクトを作り初期化する - ()の代わりに{}でもOK
  int eOb1( 5 );                     // intオブジェクトの作成
  int mOb1( 7 );                     // [問] 上と同じタイプのオブジェクトを作り初期化せよ

// doubleタイプのオブジェクトを作り初期化する - ()の代わりに{}でもOK
  double eOb2{ 3.14 };               // doubleオブジェクトの作成
  double mOb2{ 2.71 };               // [問] 上と同じタイプのオブジェクトを作り初期化せよ

//------------------------------------------------------------------------------
// [演習 2]  標準ライブラリ(C++ Standard Library)が提供するタイプのオブジェクト作成方法の習得
//   (演習実行手順)
//     下のプログラムのコメント部分に書かれた[問]に対して、答えを入力してプログラムを完成せよ
//------------------------------------------------------------------------------

// stringタイプのオブジェクトを作り初期化
  string eOb3{ "Hello World!" };      // stringオブジェクトの作成
  string mOb3{ "Hello Geant4" };      // [問] 上と同じタイプのオブジェクトを作り初期化せよ

  //--- stringタイプが持つmember関数 "length()"を使用し、データの文字数を取得する
  int eOb3_Leng = eOb3.length();      // member関数の使い方
  int mOb3_Leng = mOb3.length();      // [問] 上と同じ情報を取得せよ

// vectorタイプのオブジェクトを作り初期化 (doubleの要素を持つ)
  vector<double> eOb4{ 1.23, 4.56 };  // vectorオブジェクトの作成
  vector<double> mOb4{ 9.87, 6.54 };  // [問] 上と同じタイプのオブジェクトを作り初期化せよ

  //--- vectorタイプが持つmember関数 "size()"を使用し、全要素の数を取得する
  int eOb4_Size = eOb4.size();        // member関数の使い方
  int mOb4_Size = mOb4.size();        // [問] 上と同じ情報を取得せよ

  //--- vectorタイプが持つmember関数 "at()"を使用し、２番目の要素のデータを取得
  double eDat = eOb4.at(1);           // member関数の使い方
  double mDat = mOb4.at(1);           // [問] 上と同じ情報を取得せよ

///------------------------------------------------------------------------------
// [演習 3]  上の演習が完了したら、答えが正しいかをチェックする。手順は以下のとおり：
//   (演習実行手順)
//     * チェックのプログラムは以下に用意されている
//     * 受講者はこのプログラムをそのまま使うこと - 変更する必要はない
//     * 実行するコマンドは下記の通り：
//       % c++ C01_WhatIsObject.cc        
//       % c++ -std=c++11 C01_WhatIsObject.cc   (もし、上記でerrorが出た場合) 
//------------------------------------------------------------------------------

// チェック用プログラム コード
  //--- built-inタイプ
  cout << "mVal: " << mVal << endl; 
  cout << "mOb1: " << mOb1 << ", mOb2: " << mOb2 << endl; 


  //--- stringタイプ
  cout << "mOb3: " << mOb3 << endl;
  cout << "mOb3 (Length): " << mOb3_Leng << endl; 

  //--- vectorタイプ
  cout << "mOb4 (Size): " << mOb4_Size << endl;
  cout << "mOb4(1): " << mDat << endl;
}
